# Datasource
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username =  ${JDBC_USER}
quarkus.datasource.password =  ${JDBC_PASS}
quarkus.datasource.jdbc.url =  ${JDBC_URL}

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=update
#quarkus.hibernate-orm.database.generation=create-drop

# Kafka host configuration
kafka.bootstrap.servers=pkc-p11xm.us-east-1.aws.confluent.cloud:9092

# Server Port
quarkus.http.port=8089

# Transaction Registered
mp.messaging.incoming.transaction-registered.connector=smallrye-kafka
mp.messaging.incoming.transaction-registered.auto.offset.reset=earliest
mp.messaging.incoming.transaction-registered.topic=merchant-account

# Transaction Booked
mp.messaging.outgoing.transaction-booked.connector=smallrye-kafka
mp.messaging.outgoing.transaction-booked.topic=financial-reporting
mp.messaging.outgoing.transaction-booked.cloud-events-source=ledger
mp.messaging.outgoing.transaction-booked.cloud-events-type=funny-bunny.xyz.financial-reporting.v1.transaction.booked
mp.messaging.outgoing.transaction-booked.cloud-events-subject=transaction-registered

# Payment Book Failed
mp.messaging.outgoing.transaction-book-failed.connector=smallrye-kafka
mp.messaging.outgoing.transaction-book-failed.topic=financial-reporting
mp.messaging.outgoing.transaction-book-failed.cloud-events-source=ledger
mp.messaging.outgoing.transaction-book-failed.cloud-events-type=funny-bunny.xyz.financial-reporting.v1.transaction.failed
mp.messaging.outgoing.transaction-book-failed.cloud-events-subject=payment-book-failed


