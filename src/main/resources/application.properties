# Datasource
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = postgres
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/postgres

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=update
#quarkus.hibernate-orm.database.generation=create-drop

# Kafka host configuration
kafka.bootstrap.servers=localhost:9092

# Server Port
quarkus.http.port=8089

# Transaction Registered
mp.messaging.incoming.transaction-registered.connector=smallrye-kafka
mp.messaging.incoming.transaction-registered.auto.offset.reset=earliest
mp.messaging.incoming.transaction-registered.topic=payments

# Transaction Booked
mp.messaging.outgoing.transaction-booked.connector=smallrye-kafka
mp.messaging.outgoing.transaction-booked.topic=payments
mp.messaging.outgoing.transaction-booked.cloud-events-source=ledger
mp.messaging.outgoing.transaction-booked.cloud-events-type=paymentic.payments-gateway.v1.transaction-booked
mp.messaging.outgoing.transaction-booked.cloud-events-subject=transaction-registered
mp.messaging.outgoing.transaction-booked.cloud-events-audience=external-bounded-context
mp.messaging.outgoing.transaction-booked.cloud-events-eventcontext=domain

# Payment Book Failed
mp.messaging.outgoing.transaction-book-failed.connector=smallrye-kafka
mp.messaging.outgoing.transaction-book-failed.topic=payments
mp.messaging.outgoing.transaction-book-failed.cloud-events-source=ledger
mp.messaging.outgoing.transaction-book-failed.cloud-events-type=paymentic.payments-gateway.v1.transaction-book-failed
mp.messaging.outgoing.transaction-book-failed.cloud-events-subject=payment-book-failed
mp.messaging.outgoing.transaction-book-failed.cloud-events-audience=external-bounded-context
mp.messaging.outgoing.transaction-book-failed.cloud-events-eventcontext=domain
